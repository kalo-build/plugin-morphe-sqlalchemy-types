# Code generated by Morphe
# Source: Morphe Registry

# Code generated by Morphe
# SQLAlchemy model definition
# Note: This requires a Base class defined as:
#   from sqlalchemy.ext.declarative import declarative_base
#   Base = declarative_base()

from .base import Base
from sqlalchemy import Column, Integer, String, Text, Float, Boolean, DateTime, Date, ForeignKey, JSON, relationship, Enum
from typing import Optional, TYPE_CHECKING
from ..enums.nationality import Nationality

if TYPE_CHECKING:
    from .company import Company
    from .contact_info import ContactInfo

class Person(Base):
    __tablename__ = 'person'

    """Person model."""
    first_name = Column(String, nullable=False)
    id_ = Column(Integer, primary_key=True, autoincrement=True)
    last_name = Column(String, nullable=False)
    nationality = Column(Enum(Nationality), nullable=False)
    company_id = Column(Integer, ForeignKey('company.id'), nullable=False)

    company = relationship("Company", back_populates="person")
    contact_info = relationship("ContactInfo", back_populates="person")